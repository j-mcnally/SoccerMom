#!/usr/bin/env bash

if [ "$SUDO_USER" ]
then
  echo ""
else
  echo "Must run as root. Try 'sudo ./tunnel'"
  exit 1;
fi
EXISTS=`ps aux | grep -i "ssh.*kohTunnel" | grep -v "grep" | awk "{print $2}"`
if [ "$EXISTS" ]
then
  echo "Only one tunnel may run at a time."
  exit 1;
fi


#clean the config
sudo echo "restoring config"



cp $HOME/.ssh/config.bk $HOME/.ssh/config


echo "Will try to kill any previous tunnel elements"
#kill any latent proccesses from old tunnels
PID=`ps aux | grep -i "ssh.*kohTunnel" | grep -v "grep" | awk '{print $2}'`
kill $PID
killall -9 dnsmasq
echo "Starting tunnel..."
sudo -u $SUDO_USER ssh -v -N -F $HOME/.tunnel/tunnel.ssh kohTunnel &

echo "config default ssh"

echo "backing up config"

cp $HOME/.ssh/config $HOME/.ssh/config.bk

echo -e "\r\n#its not advisable to edit this file with tunnel running. Changes will be destroyed." > $HOME/.ssh/config
echo -e "\r\n" >> $HOME/.ssh/config
cat $HOME/.tunnel/tunnel.ssh >> $HOME/.ssh/config
echo -e "\r\n" >> $HOME/.ssh/config
echo -e "\r\n" >> $HOME/.ssh/config
echo -e "############ORIGINAL##############\r\n" >> $HOME/.ssh/config
cat $HOME/.ssh/config.bk >> $HOME/.ssh/config


sudo $HOME/.tunnel/tunnel-dns.sh

#create a temp ssh config merging tunnel with user



echo "collapsing tunnel"
PID=`ps aux | grep -i "ssh.*kohTunnel" | grep -v "grep" | awk '{print $2}'`
kill $PID


echo "restoring config"
cp $HOME/.ssh/config.bk $HOME/.ssh/config